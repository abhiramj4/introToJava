#BlueJ class context
comment0.target=Game
comment0.text=\ \r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\ \r\n\ \ to\ make\ it\ more\ interesting\!\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\r\n\ @version\ 2006.03.30\r\n\ \r\n\ @author\ Abhiram\ Santhosh\r\n\ @version\ October\ 20,\ 2017\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=void\ eat(Command)
comment10.text=\r\n\ Player\ eats\ some\ food\ and\ is\ full.\r\n\ \r\n\ @param\ command,\ the\ command\ to\ be\ processed.\r\n
comment11.params=command
comment11.target=void\ goRoom(Command)
comment11.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ \r\n\ @param\ command,\ command\ to\ be\ processed.\r\n
comment12.params=command
comment12.target=void\ drop(Command)
comment12.text=\ \r\n\ Drop\ the\ object\ held\ by\ the\ player\r\n\ \r\n\ @param\ command,\ command\ to\ be\ processed.\r\n
comment13.params=command
comment13.target=void\ pickUp(Command)
comment13.text=\ \r\n\ Pick\ up\ an\ item\ in\ the\ game,\ if\ the\ player\ is\ already\ holding\ something,\ drop\ that\ object\ and\ pick\ up\ the\ new\ one\r\n\ If\ the\ player\ is\ hungry,\ the\ player\ can't\ pick\ anything\ up\ until\ a\ cookie\ is\ eaten,\ then\ the\ player\ can\ \r\n\ pick\ up\ another\ object\r\n\ \r\n\ @param\ command,\ command\ to\ be\ processed.\r\n
comment14.params=command
comment14.target=void\ charge(Command)
comment14.text=\ \r\n\ Charge\ the\ beamer\ if\ the\ player\ has\ a\ beamer\ in\ their\ inventory\ \r\n\ \r\n\ @param\ command,\ command\ to\ be\ processed.\r\n
comment15.params=command
comment15.target=void\ fire(Command)
comment15.text=\ \r\n\ Fire\ the\ beamer\ if\ there\ is\ a\ beamer\ in\ the\ player's\ inventory\r\n\ \r\n\ @param\ command,\ command\ to\ be\ processed.\r\n
comment16.params=command
comment16.target=boolean\ quit(Command)
comment16.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ Also\ create\ all\ objects\ and\ place\ them\ in\ thier\ respective\ rooms\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ a\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment7.params=command
comment7.target=void\ look(Command)
comment7.text=\r\n\ Get\ a\ description\ of\ the\ room\r\n\ \r\n\ @param\ command,\ passed\ command\ "look"\r\n
comment8.params=command
comment8.target=void\ back(Command)
comment8.text=\r\n\ Go\ back\ a\ room\ to\ the\ previous\ room\r\n\ \r\n\ @param\ command,\ passed\ command\ to\ be\ processed.\r\n
comment9.params=command
comment9.target=void\ stackBack(Command)
comment9.text=\r\n\ Accesses\ the\ stack\ of\ rooms\ visited,\ and\ deletes\ the\ previous\ room\r\n\ and\ sets\ the\ current\ room\ to\ the\ room\ at\ the\ top\ of\ the\ stack.\r\n\ Acts\ like\ an\ "undo"\ for\ rooms.\r\n\ \r\n\ @param\ command,\ the\ command\ to\ be\ processed.\r\n
numComments=17
